# EditorConfig is awesome:
http://EditorConfig.org

# top-most EditorConfig file
root = true

# Default settings:
# A newline ending every file
# Use 4 spaces as indentation
[*]
insert_final_newline = true
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8

# C# files
[*.cs]


# .NET code style settings
# -----------------------------

# "This." and "Me." qualifiers

dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

# Language keywords instead of framework type names for type references

dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Modifier preferences

dotnet_style_require_accessibility_modifiers = always:suggestion
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async:warning
dotnet_style_readonly_field = true:warning

# Parentheses preferences

dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent


# Expression-level preferences

dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = false:suggestion

# Null-checking preferences

dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning

# C# code style settings
# -----------------------------

# Implicit and explicit types

csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = true:suggestion

# Expression-bodied members

csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Pattern matching

csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning


# Inlined variable declarations

csharp_style_inlined_variable_declaration = true:suggestion

# Expression-level preferences

csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# "Null" checking preferences

csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = false:suggestion

# Code block preferences

csharp_prefer_braces = true:error

# Formatting conventions
# -----------------------------

# .NET formatting settings

dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = true

# C# formatting settings

csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation options

csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false

# Spacing options

csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_before_open_square_brackets = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false

# Wrapping options

csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true


# Naming
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-naming-conventions?view=vs-2019
# -----------------------------


# Private fields

dotnet_naming_rule.camel_case_for_private_fields.severity = warning
dotnet_naming_rule.camel_case_for_private_fields.symbols  = private_fields_symbols
dotnet_naming_rule.camel_case_for_private_fields.style = private_fields_style

dotnet_naming_symbols.private_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_fields_symbols.applicable_accessibilities = private
dotnet_naming_style.private_fields_style.required_prefix = _
dotnet_naming_style.private_fields_style.capitalization = camel_case

# Async methods

dotnet_naming_rule.async_method_name.severity = suggestion
dotnet_naming_rule.async_method_name.symbols = async_method_name_symbols
dotnet_naming_rule.async_method_name.style = async_method_name_style

dotnet_naming_symbols.async_method_name_symbols.applicable_kinds = method,delegate
dotnet_naming_symbols.async_method_name_symbols.applicable_accessibilities = *
dotnet_naming_symbols.async_method_name_symbols.required_modifiers = async

dotnet_naming_style.async_method_name_style.required_suffix = Async
dotnet_naming_style.async_method_name_style.capitalization = pascal_case

# Async local functions

dotnet_naming_rule.async_local_function_name.severity = warning
dotnet_naming_rule.async_local_function_name.symbols = async_local_function_name_symbols
dotnet_naming_rule.async_local_function_name.style = async_local_function_name_style

dotnet_naming_symbols.async_local_function_name_symbols.applicable_kinds = local_function
dotnet_naming_symbols.async_local_function_name_symbols.applicable_accessibilities = *
dotnet_naming_symbols.async_local_function_name_symbols.required_modifiers = async

dotnet_naming_style.async_local_function_name_style.required_suffix = Async
dotnet_naming_style.async_local_function_name_style.capitalization = camel_case

# Internal data

dotnet_naming_rule.pascal_case_for_internal_data.severity = suggestion
dotnet_naming_rule.pascal_case_for_internal_data.symbols  = internal_data_symbols
dotnet_naming_rule.pascal_case_for_internal_data.style = internal_data_style

dotnet_naming_symbols.internal_data_symbols.applicable_kinds = field, property
dotnet_naming_symbols.internal_data_symbols.applicable_accessibilities = internal
dotnet_naming_style.internal_data_style.capitalization = pascal_case


# Analyzers

dotnet_diagnostic.CA1032.severity = none # Default exception constructors. 
dotnet_diagnostic.CA1062.severity = none # Validate arguments of public methods.
dotnet_diagnostic.CA1303.severity = none # Do not pass literals as localized parameters.
dotnet_diagnostic.CA1308.severity = none # Normalize strings to uppercase.
dotnet_diagnostic.CA1707.severity = none # Identifiers should not contain underscores.
dotnet_diagnostic.CA1710.severity = none # Name of type must end with 'Collection'.
dotnet_diagnostic.CA1716.severity = none # Identifiers should not match keywords.
dotnet_diagnostic.CA1724.severity = none # Type names should not match namespaces. 
dotnet_diagnostic.CA1812.severity = none # Class is an internal class that is apparently never instantiated. 
dotnet_diagnostic.CA2007.severity = none # Consider calling ConfigureAwait on the awaited task.
dotnet_diagnostic.CA5377.severity = none # Use Container Level Access Policy.
dotnet_diagnostic.CA1805.severity = none # Do not initialize unnecessarily
dotnet_diagnostic.IDE0022.severity = none # Use expression body for methods
dotnet_diagnostic.IDE0045.severity = none # 'if' statement can be simplified
dotnet_diagnostic.IDE0052.severity = warning # Remove unused members

dotnet_diagnostic.CS8509.severity = error
dotnet_diagnostic.CS8524.severity = error

dotnet_diagnostic.CA1416.severity = none #only supported on: 'windows'
                                  
# <!-- This is here to prevent gitlab pipeline from failing. In the near future, this will be one after another solved -->
dotnet_diagnostic.CS8604.severity = none
dotnet_diagnostic.CS8618.severity = none
dotnet_diagnostic.CS8601.severity = none
dotnet_diagnostic.CS8603.severity = none

dotnet_diagnostic.CS1030.severity = none
dotnet_diagnostic.CS8600.severity = none
